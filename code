create database pizzahut;

create table orders(
order_id int primary key not null,
order_date date not null,
order_time time not null);


create table order_details(
order_details_id int primary key not null,
order_id int not null,
pizza_id text not null,
quantity int not null
);




use pizzahut;

select * from
pizzas;

#Retrieve the total number of orders placed.
select count(*) as total_orders
from orders;


#calculate total revenue generated from pizzas
SELECT 
    SUM(order_details.quantity * pizzas.price) AS total_sales
FROM
    order_details
        JOIN
    pizzas ON pizzas.pizza_id = order_details.pizza_id;
    
    
    # identify the highest priced pizza

    
    

select pizza_types.name,pizzas.price
from pizza_types join pizzas
on pizza_types.pizza_type_id=pizzas.pizza_type_id
order by price desc
limit 1;

#Identify the most common pizza size ordered

select sum(quantity) as total_pizza,size
from order_details
join pizzas on
order_details.pizza_id=pizzas.pizza_id
group by pizzas.size;


#List the top 5 most ordered pizza types along with their quantities.
select * from pizza_types;


select * from order_details;
select * from pizzas;

select pizza_types.name,
sum(order_details.quantity)
from pizza_types join pizzas
on pizza_types.pizza_type_id=pizzas.pizza_type_id
join order_details
on order_details.pizza_id=pizzas.pizza_id
group by pizza_types.name;


#Join the necessary tables to find the total quantity of each pizza category ordered.

select pizza_types.category,sum(order_details.quantity) 
from pizza_types
join pizzas
on pizza_types.pizza_type_id=pizzas.pizza_type_id
join order_details
on order_details.pizza_id=pizzas.pizza_id
group by category;

#Determine the distribution of orders by hour of the day.
select hour(order_time),count(order_id) from orders
group by hour(order_time);

#Join relevant tables to find the category-wise distribution of pizzas.

select category,count(name)
 from pizza_types
 group by category;
 
 #Group the orders by date and calculate the average number of pizzas ordered per day
 
 select count(order_id),order_date from orders
 group by order_date;
 
select avg(quantity) from
 (select orders.order_date,sum(order_details.quantity) as quantity
 from orders join order_details
 on orders.order_id=order_details.order_id
 group by orders.order_date) as order_quantity;
 
 
 #Determine the top 3 most ordered pizza types based on revenue
 
 select * from pizzas;
 select * from pizza_types;
 
 select * from order_details;
 
 
 select pizza_types.name,sum(price*quantity) as total_rev
 from pizzas
 join pizza_types
 on pizzas.pizza_type_id=pizza_types.pizza_type_id
 join order_details
 on order_details.pizza_id=pizzas.pizza_id
 group by pizza_types.name
 order by total_rev desc limit 3;
 
 
 #Calculate the percentage contribution of each pizza type to total revenue
 
 select * from pizzas;
 select * from pizza_types;
 select * from order_details;
 
 select pizza_types.category , round(sum(order_details.quantity*pizzas.price)/(SELECT 
    SUM(order_details.quantity * pizzas.price) AS total_sales
FROM
    order_details
        JOIN
    pizzas ON pizzas.pizza_id = order_details.pizza_id)*100,2) as total_rev
    from
 pizza_types join 
 pizzas on pizza_types.pizza_type_id=pizzas.pizza_type_id
 join order_details on
 order_details.pizza_id=pizzas.pizza_id
 group by pizza_types.category;
 
 
 #Analyze the cumulative revenue generated over time
 

 
 
  select order_date,
 sum(revenue) over(order by order_date) as cum_rev
 from
 (select orders.order_date,sum(order_details.quantity*pizzas.price) as revenue
 from order_details join pizzas on
 order_details.pizza_id=pizzas.pizza_id
 join
 orders on orders.order_id=order_details.order_id
 group by orders.order_date) as sales ;
 
 
 
 
 
